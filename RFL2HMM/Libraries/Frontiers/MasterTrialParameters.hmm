Library "MasterTrialParameters"
{
    #load "System.Numerics.dll"

    using System.Numerics;
    using System.Runtime.InteropServices;

    [StructLayout(LayoutKind.Explicit, Size = 0x28)]
    public struct MasterTrialStageParameter
    {
        [FieldOffset(0x00)] public byte prerequisite;
        [FieldOffset(0x04)] public float limitTime;
        [FieldOffset(0x08)] public float defeatedWaitTime;
        [FieldOffset(0x0C)] public float speedUpScale;
        [FieldOffset(0x10)] public float attackRate;
        [FieldOffset(0x14)] public float recoveryHpTime;
        [FieldOffset(0x18)] public uint recoveryHpPoint;
        [FieldOffset(0x1C)] public uint limitMistake;
        [FieldOffset(0x20)] public int damagePoint;
        [FieldOffset(0x24)] public byte powerLevel;
    }

    [StructLayout(LayoutKind.Explicit, Size = 0xA4)]
    public struct MasterTrialParameterElement
    {
        [FieldOffset(0x00)] public int applicableFailedCount;
        [FieldOffset(0x04)] public unsafe fixed byte /* MasterTrialStageParameter[4] */ _stages[160];

        public unsafe MasterTrialStageParameter* stages
        {
            get
            {
                fixed (byte* p_stages = _stages)
                    return (MasterTrialStageParameter*)p_stages;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x400)]
    public struct MasterTrialParameters
    {
        [FieldOffset(0x00)] public float subjectViewTime;
        [FieldOffset(0x04)] public float readyTime;
        [FieldOffset(0x08)] public float clearTime;
        [FieldOffset(0x0C)] public float failedTime;
        [FieldOffset(0x10)] public float clearWaitTime;
        [FieldOffset(0x14)] public float failedWaitTime;
        [FieldOffset(0x18)] public float kodamaOrdinaryTextTime;
        [FieldOffset(0x1C)] public float kodamaFightDelayTime;
        [FieldOffset(0x20)] public float kodamaFightTextTime;
        [FieldOffset(0x24)] public float kodamaSplendidTextTime;
        [FieldOffset(0x28)] public unsafe fixed byte /* MasterTrialParameterElement[3] */ _element[492];

        public unsafe MasterTrialParameterElement* element
        {
            get
            {
                fixed (byte* p_element = _element)
                    return (MasterTrialParameterElement*)p_element;
            }
        }

        [FieldOffset(0x214)] public unsafe fixed byte /* MasterTrialParameterElement[3] */ _elementEasy[492];

        public unsafe MasterTrialParameterElement* elementEasy
        {
            get
            {
                fixed (byte* p_elementEasy = _elementEasy)
                    return (MasterTrialParameterElement*)p_elementEasy;
            }
        }
    }

}