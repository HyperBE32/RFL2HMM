Library "ChallengeData"
{
    #load "System.Numerics.dll"

    using System.Numerics;
    using System.Runtime.InteropServices;

    public enum Status : sbyte
    {
        STATUS_ZERO_FILL = 0,
        STATUS_INITIALIZED = 1
    }

    public enum Sequence : sbyte
    {
        Island1 = 0,
        Island2 = 1,
        Island3 = 2,
        Island4 = 3,
        Island5 = 4,
        FinalBossBefore = 5,
        FinalBossAfter = 6
    }

    public enum SaveDataIcon : sbyte
    {
        IconNoData = 0,
        IconIsland1 = 1,
        IconIsland2 = 2,
        IconIsland3 = 3,
        IconIsland4 = 4,
        IconIsland5 = 5,
        IconLastBoss = 6,
        IconExtra = 7
    }

    public enum AppVersion : byte
    {
        AppVersion_1_10 = 0,
        AppVersion_1_20 = 1,
        AppVersion_1_30 = 2,
        AppVersion_1_40 = 3
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x28)]
    public struct HeaderData
    {
        [FieldOffset(0x00)] public uint signature;
        [FieldOffset(0x04)] public byte version;
        [FieldOffset(0x05)] public Status status;
        [FieldOffset(0x06)] public byte config;
        [FieldOffset(0x07)] public Sequence sequence;
        [FieldOffset(0x08)] public uint playTime;
        [FieldOffset(0x0C)] public SaveDataIcon icon;
        [FieldOffset(0x0D)] public AppVersion appVersion;
        [FieldOffset(0x0E)] public byte config2;
        [FieldOffset(0x0F)] public byte reserved1;
        [FieldOffset(0x10)] public uint saveDate;
        [FieldOffset(0x14)] public byte index;
        [FieldOffset(0x18)] public unsafe fixed uint reserved[4];
    }

    public enum Value : sbyte
    {
        S = 0,
        A = 1,
        B = 2,
        C = 3,
        D = 4,
        Num = 5
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x18)]
    public struct CyberStageData
    {
        [FieldOffset(0x00)] public ushort flags;
        [FieldOffset(0x04)] public uint bestTime;
        [FieldOffset(0x08)] public uint flags2;
        [FieldOffset(0x0C)] public unsafe fixed uint reserved[3];
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x300)]
    public struct CyberStageContainerData
    {
        [FieldOffset(0x00)] public unsafe fixed byte /* CyberStageData[32] */ _actStages[768];

        public unsafe CyberStageData* actStages
        {
            get
            {
                fixed (byte* p_actStages = _actStages)
                    return (CyberStageData*)p_actStages;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x38C)]
    public struct ChallengeCyberStageData
    {
        [FieldOffset(0x00)] public uint status;
        [FieldOffset(0x04)] public uint totalBestTime;
        [FieldOffset(0x08)] public Value totalBestRank;
        [FieldOffset(0x0C)] public CyberStageContainerData stages;
        [FieldOffset(0x30C)] public unsafe fixed int stageNos[32];
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x11BC)]
    public struct ChallengeCyberStageContainerData
    {
        [FieldOffset(0x00)] public unsafe fixed byte /* ChallengeCyberStageData[5] */ _stages[4540];

        public unsafe ChallengeCyberStageData* stages
        {
            get
            {
                fixed (byte* p_stages = _stages)
                    return (ChallengeCyberStageData*)p_stages;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x14)]
    public struct ChallengeBattleRushScoreData
    {
        [FieldOffset(0x00)] public uint bestTime;
        [FieldOffset(0x04)] public uint reserved0;
        [FieldOffset(0x08)] public uint reserved1;
        [FieldOffset(0x0C)] public uint reserved2;
        [FieldOffset(0x10)] public uint reserved3;
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x144)]
    public struct ChallengeBattleRushData
    {
        [FieldOffset(0x00)] public uint status;
        [FieldOffset(0x04)] public unsafe fixed byte /* ChallengeBattleRushScoreData[16] */ _scores[320];

        public unsafe ChallengeBattleRushScoreData* scores
        {
            get
            {
                fixed (byte* p_scores = _scores)
                    return (ChallengeBattleRushScoreData*)p_scores;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x510)]
    public struct ChallengeBattleRushContainerData
    {
        [FieldOffset(0x00)] public unsafe fixed byte /* ChallengeBattleRushData[4] */ _stages[1296];

        public unsafe ChallengeBattleRushData* stages
        {
            get
            {
                fixed (byte* p_stages = _stages)
                    return (ChallengeBattleRushData*)p_stages;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x1C18)]
    public struct ChallengeData
    {
        [FieldOffset(0x00)] public HeaderData header;
        [FieldOffset(0x28)] public uint status;
        [FieldOffset(0x2C)] public ChallengeCyberStageContainerData cyberStage;
        [FieldOffset(0x11E8)] public ChallengeBattleRushContainerData battleRush;
        [FieldOffset(0x16F8)] public ChallengeBattleRushContainerData battleRushAll;
        [FieldOffset(0x1C08)] public uint reserved0;
        [FieldOffset(0x1C0C)] public uint reserved1;
        [FieldOffset(0x1C10)] public uint reserved2;
        [FieldOffset(0x1C14)] public uint reserved3;
    }

}