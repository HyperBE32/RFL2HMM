Library "BossRushParameter"
{
    #load "System.Numerics.dll"

    using System.Numerics;
    using System.Runtime.InteropServices;

    [StructLayout(LayoutKind.Explicit, Size = 0x14)]
    public struct BossRushStageParameter
    {
        [FieldOffset(0x00)] public uint hour;
        [FieldOffset(0x04)] public uint minute;
        [FieldOffset(0x08)] public uint healthPoint;
        [FieldOffset(0x0C)] public uint recoveryRing;
        [FieldOffset(0x10)] public byte powerLevel;
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x40)]
    public struct BossRushParameterElement
    {
        [FieldOffset(0x00)] public int applicableFailedCount;
        [FieldOffset(0x04)] public unsafe fixed byte /* BossRushStageParameter[3] */ _stages[60];

        public unsafe BossRushStageParameter* stages
        {
            get
            {
                fixed (byte* p_stages = _stages)
                    return (BossRushStageParameter*)p_stages;
            }
        }
    }

    [StructLayout(LayoutKind.Explicit, Size = 0x1B0)]
    public struct BossRushParameter
    {
        [FieldOffset(0x00)] public unsafe fixed byte /* BossRushParameterElement[3] */ _element[192];

        public unsafe BossRushParameterElement* element
        {
            get
            {
                fixed (byte* p_element = _element)
                    return (BossRushParameterElement*)p_element;
            }
        }

        [FieldOffset(0xC0)] public unsafe fixed byte /* BossRushParameterElement[3] */ _elementEasy[192];

        public unsafe BossRushParameterElement* elementEasy
        {
            get
            {
                fixed (byte* p_elementEasy = _elementEasy)
                    return (BossRushParameterElement*)p_elementEasy;
            }
        }

        [FieldOffset(0x180)] public uint defaultRing;
        [FieldOffset(0x184)] public uint defaultRingEasy;
        [FieldOffset(0x188)] public float defaultCyloopGauge;
        [FieldOffset(0x18C)] public float readyTime;
        [FieldOffset(0x190)] public float clearTime;
        [FieldOffset(0x194)] public float failedTime;
        [FieldOffset(0x198)] public float clearWaitTime;
        [FieldOffset(0x19C)] public float failedWaitTime;
        [FieldOffset(0x1A0)] public float kodamaOrdinaryTextTime;
        [FieldOffset(0x1A4)] public float kodamaFightDelayTime;
        [FieldOffset(0x1A8)] public float kodamaFightTextTime;
        [FieldOffset(0x1AC)] public float kodamaSplendidTextTime;
    }

}